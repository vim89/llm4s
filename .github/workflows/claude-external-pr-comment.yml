name: Claude External PR Comment

on:
  pull_request_target:
    types: [opened, synchronize]

jobs:
  comment-on-external-pr:
    # Only run for external PRs
    if: |
      github.event.pull_request.draft == false &&
      github.event.pull_request.head.repo.full_name != github.repository &&
      github.event.pull_request.author_association != 'COLLABORATOR' &&
      github.event.pull_request.author_association != 'MEMBER' &&
      github.event.pull_request.author_association != 'OWNER'
    
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
      - name: Comment on External PR
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ðŸ”’ Claude Code Review Status
            
            Thank you for your contribution! This PR is from an external repository, so automated Claude review is disabled for security reasons.
            
            **For maintainers:** To get Claude review for this PR, comment \`@claude\` and I'll trigger a manual review.
            
            **PR Summary:**
            - Files changed: ${{ github.event.pull_request.changed_files }}
            - Additions: +${{ github.event.pull_request.additions }}
            - Deletions: -${{ github.event.pull_request.deletions }}
            - Author: @${{ github.event.pull_request.user.login }}
            `;
            
            // Check if we already commented
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const hasComment = comments.some(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Claude Code Review Status')
            );
            
            if (!hasComment) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }