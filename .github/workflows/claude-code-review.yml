name: Claude code review (Main)

on:
  pull_request:
    types: [ opened, synchronize ]
  issue_comment:
    types: [ created ]

# Cancel in-progress Claude reviews for the same PR
concurrency:
  group: claude-review-${{ github.event.pull_request.number || github.event.issue.number }}
  cancel-in-progress: true

jobs:
  # Auto-review for trusted PRs
  claude-review-trusted:
    if: |
      github.event_name == 'pull_request' && 
      github.event.pull_request.draft == false && 
      (
        github.event.pull_request.head.repo.full_name == github.repository ||
        github.event.pull_request.author_association == 'COLLABORATOR' ||
        github.event.pull_request.author_association == 'MEMBER' ||
        github.event.pull_request.author_association == 'OWNER'
      )

    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    uses: ./.github/workflows/claude.yml
    with:
      pr_head_sha: ${{ github.event.pull_request.head.sha }}
      review_type: 'trusted'
      pr_number: ${{ github.event.pull_request.number }}
    secrets:
      CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

  # Info comment for external PRs
  claude-review-external-info:
    if: |
      github.event_name == 'pull_request' && 
      github.event.pull_request.draft == false &&
      github.event.pull_request.head.repo.full_name != github.repository &&
      github.event.pull_request.author_association != 'COLLABORATOR' &&
      github.event.pull_request.author_association != 'MEMBER' &&
      github.event.pull_request.author_association != 'OWNER'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Comment on External PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = `## ðŸ”’ Claude Code Review Status
            
            Thank you for your contribution! This PR is from an external repository, so automated Claude review is disabled for security reasons.
            
            **For maintainers:** To get Claude review for this PR, comment \`@claude\` and I'll trigger a manual review.
            
            **PR Summary:**
            - Files changed: ${{ github.event.pull_request.changed_files }}
            - Additions: +${{ github.event.pull_request.additions }}
            - Deletions: -${{ github.event.pull_request.deletions }}
            - Author: @${{ github.event.pull_request.user.login }}
            `;
            
            // Check if we already commented
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const hasComment = comments.some(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Claude Code Review Status')
            );
            
            if (!hasComment) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  # Manual review via @claude comment
  claude-review-manual:
    if: |
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '@claude') &&
      github.event.comment.user.login != 'github-actions[bot]' &&
      (
        github.event.comment.author_association == 'COLLABORATOR' ||
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'OWNER'
      )

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write

    outputs:
      pr_head_sha: ${{ steps.pr-info.outputs.head_sha }}
      pr_number: ${{ github.event.issue.number }}

    steps:
      - name: Get PR details
        id: pr-info
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            core.setOutput('head_sha', pr.data.head.sha);
            
            return pr.data;

      - name: React to comment
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });

  # Call reusable workflow for manual review
  claude-review-manual-execute:
    needs: claude-review-manual
    if: needs.claude-review-manual.result == 'success'
    
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write
    
    uses: ./.github/workflows/claude.yml
    with:
      pr_head_sha: ${{ needs.claude-review-manual.outputs.pr_head_sha }}
      review_type: 'manual'
      pr_number: ${{ needs.claude-review-manual.outputs.pr_number }}
    secrets:
      CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}