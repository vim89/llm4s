name: CI for pre-configured project $name$ using llm4s

on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, labeled, reopened]
    branches: [ main, master ]
    # Run only if PR has a specific label (e.g., run-ci)
    paths-ignore:
      - '**.md'
      - '**.png'
      - '**.jpg'

jobs:
  lint-compile-and-test:
    name: Build, format, compile, test for $name$ scala project using llm4s
    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala: [ "$scala_version$" ]
        java: [ "$java_version$" ]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java \${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: \${{ matrix.java }}
          cache: sbt

      - name: Set up sbt launcher
        uses: sbt/setup-sbt@v1

      - name: Cache Ivy2 and Coursier
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: \${{ runner.os }}-sbt-\${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            \${{ runner.os }}-sbt

      - name: Run pre-commit hooks
        uses: pre-commit/action@v3
        with:
          extra_args: --all-files

      - name: Compile and test for Scala \${{ matrix.scala }}
        run: |
          sbt ++\${{ matrix.scala }} scalafmtCheckAll compile test

      - name: Upload Test Results (JUnit XML)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/test-reports/

      - name: Code Coverage Report (scoverage)
        run: |
          sbt ++\${{ matrix.scala }} clean coverage test coverageReport
        continue-on-error: true

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: \${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true
